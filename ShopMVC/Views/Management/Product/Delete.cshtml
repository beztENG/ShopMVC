@model ShopMVC.Data2.Product
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Admin - Toggle Product Status";
}
@if (Context.User.Identity.IsAuthenticated && Context.User.IsInRole("1"))
{
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow-lg">
                    <div class="card-header bg-warning text-white">
                        <h2 class="card-title">@(Model.Active ? "Deactivate" : "Activate") Product</h2>
                    </div>
                    <div class="card-body text-center">
                        <h4 class="card-subtitle mb-4">@Model.ProductName</h4>

                        <img src="@(string.IsNullOrEmpty(Model.Image) ? Url.Content("~/Image/Customer/Photo.gif") : Url.Content($"~/Image/Product/{Model.Image}"))"
                             alt="Product Image" class="img-fluid rounded" style="max-width: 200px; height: auto;" />

                        <p class="text-muted mt-3">Are you sure you want to @(Model.Active ? "deactivate" : "activate") this product?</p>

                        <form asp-action="ProductDelete" method="post" class="mt-4">
                            <input type="hidden" asp-for="ProductId" />
                            <input type="hidden" name="confirm" value="true" />
                            <button type="submit" class="btn @(Model.Active ? "btn-warning" : "btn-success")">Confirm @(Model.Active ? "Deactivate" : "Activate")</button>
                            <a asp-action="ProductIndex" class="btn btn-secondary">Cancel</a>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    @await Html.PartialAsync("_AuthorizeScreen")
}
