@model IEnumerable<ShopMVC.Data2.Product>
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Product Profit Ranking";
    var rank = 1;
}

<style>
    /* Rank Colors */
    .rank-1 {
        background-color: gold;
        color: black;
    }

    .rank-2 {
        background-color: silver;
        color: black;
    }

    .rank-3 {
        background-color: sandybrown;
        color: black;
    }

    .card {
        transition: transform 0.3s ease-in-out;
    }

        .card:hover {
            transform: scale(1.05);
        }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-title {
        font-size: 1.2rem;
    }

    .card-text {
        font-size: 1rem;
    }

    .card-rank {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 1rem;
    }

    .trophy-icon {
        margin-right: 0.5rem;
    }
</style>

@if (Context.User.Identity.IsAuthenticated && Context.User.IsInRole("1"))
{
    <div class="container mt-5">
        <h1 class="display-4 mb-4 text-center">Product Profit Leaderboard</h1>

        <div class="row">
            @foreach (var product in Model)
            {
                var rankClass = rank <= 3 ? $"rank-{rank}" : "";
                <div class="col-md-4 mb-4">
                    <div class="card h-100 shadow-lg @(rankClass)">
                        <div class="card-body">
                            <div class="text-center mb-3">
                                <img src="~/Image/Product/@product.Image" class="img-fluid rounded-circle" style="max-width: 100px;" alt="@product.ProductName">
                            </div>

                            <h5 class="card-title text-center">@product.ProductName</h5>
                            <p class="card-text text-muted text-center">@product.Category?.CategoryName</p>

                            <div class="d-flex justify-content-between mt-3">
                                <div>
                                    <p class="text-muted mb-0">Unit Price:</p>
                                    <p class="fw-bold">$@product.UnitPrice?.ToString("0.00")</p>
                                </div>
                                <div>
                                    <p class="text-muted mb-0">Quantity Sold:</p>
                                    <p class="fw-bold">@product.QuantitySold</p>
                                </div>
                            </div>

                            <hr class="mt-2 mb-3">

                            <div class="text-center">
                                @if (rank <= 3)
                                {
                                    <i class="fas fa-trophy fa-2x @(rankClass)"></i>
                                    <h3 class="mt-2">Rank #@rank</h3>
                                }
                                else
                                {
                                    <h4 class="mt-2">Rank #@rank</h4>
                                }
                                <h4 class="text-success">Profit: $@product.Profit?.ToString("0.00")</h4>
                            </div>
                        </div>
                    </div>
                </div>
                rank++;
            }
        </div>
    </div>
}
else
{
    @await Html.PartialAsync("_AuthorizeScreen")
}
